<!--# Image upload component that accepts multiple images and displays them in a grid
# max of 10 images
-->
<%= form_with(url: images_url, method: :post , multipart: true, data: { controller: "image-uploads", image_uploads_target: "form", action: "submit->image-uploads#handleSubmit" }) do |form| %>
<div>

<div class="image-upload-card block w-full rounded-lg bg-neutral-100 p-4 shadow-md">
  <div class="rounded-lg bg-accent p-4 flex preview-hidden" data-image-uploads-target="contentWrapper">
      <div class="flex items-center justify-center input-trigger upload-tips text-center cursor-pointer bg-primary text-text-light hover:text-neutral-300  p-2 border border-dotted border-white rounded-lg" data-image-uploads-target="inputTrigger">
        <div class="block">
          <h4 class="my-4">Drop, Upload or Paste images with Ctr+V</h4>
          <%= render(IconComponent.new(name: "upload", classes: "flex items-center justify-center text-neutral-100 cursor-pointer")) %>
          <p class="text-sm -700 my-3">Upload up to 10 images</p>
        </div>
      </div>
      <div class="hidden preview px-2 pb-4 min-h-32 max-h-56 overflow-y-auto custom-bar" data-image-uploads-target="preview">
      </div>
  </div>
    <p class="text-sm text-neutral-700 my-2"><span class="text-red-500">*</span> Your data is safe. No storage is used.</p>
</div>
  <div class="field hidden">
    <!--# we need to allow only images-->
    <%= form.file_field :images, multiple: true, data: { image_uploads_target: "input" }, accept: "image/*" %>
  </div>

  <div>
    <%= form.hidden_field :conversion, value: @conversion %>
  </div>
  <div class="actions hidden flex justify-center" data-image-uploads-target="submit">
    <%= render(ButtonComponent.new(text: "Upload", type: "submit", classes: "max-w-[150px] mt-4")) %>
  </div>
<% end %>
</div>
